/* global __dirname */
/**
 * This script initializes the database by first fetching the episodes
 * and then saving them to Firestore.
 */

const { exec } = require("child_process");
const path = require("path");
const util = require("util");
const execPromise = util.promisify(exec);

const GET_EPISODES_PATH = path.join(__dirname, "get-episodes");
const SAVE_EPISODES_PATH = path.join(__dirname, "save-episodes");
const GET_EPISODES_PICTURES_PATH = path.join(
  __dirname,
  "get-episodes-pictures"
);

const SPANISH_TOKEN =
  "eyJ6aXAiOiJERUYiLCJraWQiOiJ0Vy10M2ZQUTJEN2Q0YlBWTU1rSkd4dkJlZ0ZXQkdXek5KcFFtOGRJMWYwIiwiY3R5IjoiSldUIiwiZW5jIjoiQzIwUCIsImFsZyI6ImRpciJ9..P_SqsMUwG57E583c.1s2ezTM_uhawuQQf5ii2mlpl6lj-AHLh1ZxnABUZ_suvYCvOpdh5LWtcl6NJmgfoc5OHVWZxby6O-YmD5mhOBKm7-zuSdjvzOdmG-CedTEPKzchcuFuu-YVr6Fv7UEYpaWarwi7l-NtiCsiwOo4scZCsuT1GvNzgkxpV5V6jDU1Cav2ik6imOmJD7FgX43Yki_P-K2I0RbWDWjixQOkuPE1S6bjzKFZcOaaA_chrvkQtqtIIUyC3y9kgyNiXT212kHoLpLITBXHkj__pevfv7tGKX3_aMEVDIYkgCmtEx9339cmpEigWrpSYh7cPs0tOcyisAFfHp0m6JH3ShJ-Fb1Z4Ck5tGjeGbHpoRc3U7UzrAoaUkf-ITP-KlwOY6onPXmD_y23q4YnKz4Nzfh2BnybPa14Gqj1Ff4nyEjaqMbPp1TC60DJ5_HU60MDgrHeILNmAIwD4g02pdOZv_FJsPaZOfMjpXNQuGlFGAJp2iNrr0ce37erSFYBJKm56-wDAzZJZdkJRAgR08k_zMavjRfLqzP6mo-r73MMEZX8mrWl_azGl3lq4TM_qM6ZZ24fdnbQicf_CO9C9-Xy3PhAYmWDX2gWanI661xBDAw9gb6ntOuzn_0647W8tQAiXH2nKRPezWFp68F1YeVeYtA2Ztt7yArtEkOqkUZrlhata1h1HHSrSI48XWBXAG75SGADW_RY7KJqv9IrZQ1Hrf5kjMCKBEG9qg4ef1HKFNO4tpO_DllcVEY55y3oHAiBBjP2og0s6mjuMRYYk7q9Gu8krWz1y_cUzoneL2C4KgdXkyD4EA-lxWZs23dZ9ctXc0cRtxpCG6PhmRLUuJhZmIgIUxAvlPjXs3Ytzh9-wXxxc9_pk7a9NZcwJ3JAslMMnmmBH6wQo92kgWXiQfxkue-Ld_YL3R78x7Od1pqdQv-TL2PFXAkt6YI-UV-SmzDRmtaFpKD0SlCN91MbnR5dpG-bnQHF2TZQWEdiEy0NWTl6vqQa55I1DUm7zsteytYNkMaGOxmWFGgeH2UbXPQ0SMIwxUAIuN3CLNf8-MSSGYj3GLHLUfxyQHlxzsvNL3Jg87fPTxzeCgOUnMImhs9amd0s2Ve01EHm9U_JKn9mnlWG7a7TRXa9bY7xy1fUFLWk1ccsXzgVqVHp3KRJucTyPRbJWfIgHbVX7pCcLpLcsQgrd7uuwqUURO5k8rXpzRIecxrFlRdguWJ0yAXm5GU0eo40WLrJ0JZKVFmtvkinD2x72yY8-JBj-THaGIWNThIA2IaFeaUdoL4CB4qhp9Xycgr-e3oEU4mwDPaIPxsxNyg8YMShqaeQmXI7G2FSzVhU1Csy0wj6FrMRzr0ROqk0w1N9hW5Tzm9eHbGgGpn0CLdKFuLHdWaMWK-1aRUqYpr5-86CQSWrn4fKs6rOQFSJYsOAfmGfjg9Zwcc5yxhSvZ4oiNFNB666q-pHSULlSnDFuYls-G4KZWaG5e0HoDuiiouHSkmNcuhy0qJ8aOis8nxemX4VrgWNOkgQ8yUt6kjnME5ESWMrdmne38rYEBCxetdApGbFyoWMZenby2QNpLZ_vKqc6zxNXh-eTK4drvWtX4ZVheGhaDsdGQd9eKc1FnvoFdyjn8P1xCGTwignqdvWkBeBh__Ys7YmXHiFEkBijMlD81tUOSDcDds02wj-tpqyJvqhhNMOv-DcmWg-CxY92PbTtTKzcqmcgk9Hs1_JJz4JOxSXpRSosNecMbfWvFRxlD1Dul41KZLDBXZRUBgKgyPrkey1Q649HWBEgUsRUPkFSq_ApIjVOUFSPAUAp5orR6NO8EU5oh_-PuGHNf7Zyte3NljKgdZncjP7RmeqnlwVNgv2hKUbZNhYy4-UfYaagJelkbos_ZlUH0APsKZeS9mqdzJmLFIv8MDbm9IqvOWE_xi0DfiUXQppuGcM-8aS1qXyh-YRxtKx5AWemk2vZuGPS70x-82RxjeK9zwj92efQV290NVP_yyk5wiDYmJ7ToQEgmxGxSdjrPeY-yF3xP8NpY9ZiM6pjjou6a2m7-VPk3jbkg2wP6GHhWs2HdZB4w423pzCkE-2d7wsp0muN5CE1DhEUAJUSm3h2bklaelebH3e8H7NnUpR9zyVrGMhuP2wEhNHy-z5VGpt3oisXc08m8fx9foKjGHZ2OmM1QYC2ORPevqPwgLG9lFh8tws3NuCAPzYQA6rzJsrfH9xGkYvleXo9kYY-Gwn_6t_0LRJon4KlvtyvEOgb8EqjLhbal5AczBOZvnQF7JydMla8wXwolrpg4FEc70byErUQTFrRzQBEpVnTKzVILi3JvYEH7QoSGxBWAJlsRa8WN2P6Eh_AGrdB8RjZGTOxof7hEzXut1AK8hMWRKiLbk37EzbZQq1efZjRPbxPc3zU3OGn26E8dTI5BZkQHKIxNhFro2aPtc8RkMwXDXaYK-DJ3kI01Komg_CGXEs3e_HBlqBfZVOCzxM6vAXqdExGwtumTgkxeAJ_rb7hGvvsDQCr4xBYjEo2YDWxaZnnXvzPbxxao-THH-LDB-arz-YIRsn15gu1zscoQkJuw9okgJlaVOsl1iGo4SQxWJHy546iSzlDNQsiohY6Ira9NUIWZj4LHyqocMuI6gkRuffpYSJ6stl_RAFxz5kGVq2bUfu2P7IVqb5sXwn3sllbEWPpsUQNJzmZOdZyk6CoDRq6sMxi8s7xQQH37ivFf2BrGahqV0tIoNpJXbcqCMC98kNDoDPseOaO-2kdthnhsUUu88AM6MeCsbrasYS7Tzeihe5ohuWDi18Np_HsrdMSFbSMKWcIya6D5uMiNqokbPYyKnzdTEcMZPVz647xmOeV_ofytphE4mLPhSDp8RKT1VDMfenifUDavGQNmkTxYa7WGJ4_VbhCpXHgAw-FotUrgZDoyS9fcrHoCsZu18-v9vdsuuJT80kLGkxLaDYRNWM_KPDDwZyaTJ2u0Dadr_LRXV1gQsEkb6M-5i63n_eSax43s4XK9uoMziMcSc8rbw6qtv6nwjJsCF_uV2qMrIX2ogWut8FT0bqsXzDjpmEqqzk8ro6diedGnG_frn_sHzfnZ5PiXgc_aGR-pog65bA_vvwn9lbb1Yozq52VWNOptmvV7tRqKf9atKU5s6D8F5IFFpA-X-UKtc-eDCiinBBJ0z_Neteq-Y6lUuH4eQP_AcbGnRLCrzYkWDobZYsH4Sa6mqMRrHekIj5FOb1y3BHvKLyuEfoR0Mbb6Ly8mD_JcVxgJdY1geFDB-tHEXs7aDfyLT422f-_0kxSIjjej1e4JAWnNc0f9M-TlsOyQAA1vU9hTfyZaYhsWGDNPqmGDNFqcQlWFKD89ww4mexc58LPkDe41snzIY5hVuhJ3NvI8l7ZZXE4RT-s47eoDSvev-ko-jT7iAHw17umvQM0eqrp2dII6jokIGylJuXbyiNCXPqpAnuq0wT3pDB9ahU6OhQtFCdY9gQqvBxHrNzBGyAIgMVYoNMGCHFdBSjVw3Eo3kx1cDLFlYic6pm3yqCqmFr4xH6IGGy_OqRCp_w4Ij0ZjrDnn2X1xH7MPxu3-ZiKftb6_DN3BmuzovSJKbF6FwSmXtOdrDIDJLMb2lD_Hz-FjYJCU_ICtktNdSyJdtLsoy8RQTeDQk33s55ViBHqSn7dcpOBaLHYPkKlx9oxzjwxOiT7M3vW-tgGzqIJurE7zH5Uqjyhn2nEL5N1mrcYDql3Xcm_-tVQf-dQiuhSStdok0rdWW2s8NBs8sx1EI5rgBAnCIqQZmz4e4bCpBBiXSezuHVOECmYbKNwAAFiWK-je356swPSwWOjyLoN8lsGmu5krTxfun_FWFRS7Ey_uvavD2cgRYrQ1N0jcgcTJptGo99oTGlLXR5R4fWlOl0g0wHnCaE9QNGVmW6GsiTv8hOsGm3CgNEJ-TnmNcjj_IOHcqI0_TKvxSDf8d1Q1mgkpxyrNaZ0XLy0MV2mtx7xTVVRZq7m06AeAKQTBAjZ6DPreNqk0yAFswUv_Jf_A4gn_WzLO7B75flR9JeDnCW79peH9gZDU2lyH8Pu3u6IHnJ8ma-uBYTWisBmTjPUlNOEVk0VJtOtWXy5tVusV2brmklKE_FEym-QTwk2xsQRZE-mww6bfVgeaOvhL_r2pe0Yr7-FfR_n8tRmFIyhZcpGmh6GsRwWwaDZGDSPwQA-MeLB-2s3BqYrICXET8pxIw9Gi8oXWwqlyd7ZgiyMAN-ZizH4tOhBWcNPR9Cw8FtzRYN49xWW9cPQBvKs-e9Un7-OtOI6oLKLN03wEF4qP0RVCReqnwXU3fTxK5OWQVHur3BSv4kgp3_CLpbffj2S.nWsY26Z07_MWmpM7mhDomQ";
const ENGLISH_TOKEN =
  "eyJ6aXAiOiJERUYiLCJraWQiOiJ0Vy10M2ZQUTJEN2Q0YlBWTU1rSkd4dkJlZ0ZXQkdXek5KcFFtOGRJMWYwIiwiY3R5IjoiSldUIiwiZW5jIjoiQzIwUCIsImFsZyI6ImRpciJ9..YC4j2hxjetDVf-RZ.nU4ce90s9QUndOOaE0ZhL3kcizffI2j-0KXt98ucaYUYCWGhvNPZKMvMQZvAtRHGz4IRQwRSieCMtaVPc4tNgBemVlgNn72Bj7iCWcQnxgt0dPihf-eMXPfk4l-LOSm0y6bKYuhzElkDcTx0_xYLWGCvDOdaK72MuGHOP4hiyZMzalCRTp_cCKkDuAI7WnT5nxHGX5UuhSldGxVwyju8nQMZIPPRe1hh78AfFVue9MqaYok1XRmKqPSmrZtznTsGUtYQjZg_oTgwulPg-NV2CWjLe778wtODBp7gvrZlj5a1JQ1W5xq1bE6nvf0VhqFhemc4agaegnGpqbESXRtQYRjzUrvaicjRtkCTna0UQfs_-zSL2LDzhK6zrV6apS7mfXMSqQ89udMUwgpf35bIeZ0kTu7lHIYqXvjErOhtk-EABmoSvCrhlUMpFi2Z05NtE6iXE1NwpAW796hxhCY77OzYqM-MzRk8iKXPu1uoeP7N6EPpKdtsVjTXGMMcj0VXD4CmIzinMIFa9AenkFJLmbssc6FhUnGaiKvdcLM8S0uBL8s-fRYFhpi0xQrNF2q39gChPUXIFYaC6CG8iq6_U3lCY3AcMhyaFhSX_PQubPUZhr2X7tdPZ7_r6uHHJUO4-1QcupEF-jYQS4DZ_nIMs3DUWj3MvgCk0Yp8_UBbOkWcUasSSgrV8SmQoA5B10fNvCKXJspkz2I15sbAqtBzFO8M7ksLZ33lWtGRIsXIhRR3dVJBG_v2vEx6TaduizJ-6CMyrKOHi7wpjvlhbRvP6EqgE9Lnfzq7IvChOG9kBM5N4-MTZU5WQ-8ydNOkFhum114L4322H9G5ABKumfsTvqKy50brbHewc2aNWiEx7e0L0vpg1pmYUxz453gxdfd730nBNG_G8PGT3uCxoPeicmK_-F6Z3sOrD66Hwcfp2UAaq8mI1skwnaB6PS5MdIiEDIpNM9CSJuDbKryzpZVZtpuGJpxOQ9zEwdh8C5nOMDEmud3sE9UQAYZtfXBASvjyfYgJl3U_QECfZPdhWq5njMky0PVV2isSsox0XnX2mF3FOPiwaiyB0sggCzNmz1kyLRA602_jKZAq1uDpHVmtLAi6IMZXI5-aM1aG93W_-4tvkmRF-EwFXigR2d7L8IfAHv7jxt2uWj8OFHS9qoQ0XIBzWiiyWoL1ZOuDXszd0p0x_mkRPU0kJH3WxgI-5OYPTiXzh65Af_nFYWyu7lwAaath4BT0b6rB5xuqs6amguJgZIvnLwlz-3cg9ro4prfMpl9wEEGuhCk7MZAh_ZSYeNkflzyjLHDeMileBVkKuWBIO5PxIwzi6a4DvsDvf9rSxdk7OJMF7pBg69-Msf5TXFcU_mYLfh57FQLcOIoxuw3cjtpuMk0aIdvoFmynWeNi0QCf4BhjtOAU_WUEDQXYpNoZQBY7XoL1t4JHxRUIg3SXfnVSpHyqrFbWNREAkjKjCyvaHwzrS8JEC8AmJDuo4aCE-SXYPfh-maTMz3ttroyRTm04vOJT3GifxtEMfXd7onMbFQKnAV1_2PNHPcpZZkFNDwh3PK9gZV_Q3MeN2OtKWNu3pYDDgLdoOSMsRzIQ882f4zxVrhfJyQAR9TdWOfiAKCZPrwMtheDsAXS5Kib25fstmYSsNq25tay3bzf3uYXjGr7zruMaxkMVv7ik9H5GRDK-AYDgVS7PTsWM-PpBcmevWUKDFmCtR6NXf2Tbf-QqpVOaIfgzsODXw1FJSnLVebt3nAxD4EGRnS2p3ZTymrWZQEwqbGUYvwm3DUGTgJrbSuSr5FexnxFD5TmdkNS-EWZpxUP-JI6YAWW2Cs5l6vF8PmwdoLl7kB009nKEsDfD__5gR_eSQ9rSYvyC8UMBXGgLouJ8tIBELR10VJEY6_AHPriDKYuhqJuWHx2lN_pJ4ZBl6Jsjd85eRtUmh1koSY-YGDuPlLs-f52AqjD18a11sXD_zzP5gAH9TQTyULNzyzxOv8tffF34XMkCmR1-DpWS50r9Z_77hU8E3ZAeQ9NopajgW2tciKJL-9Y6sgUSozRibIbUV5S5plZ9xSMTQtQUAisvnJ1cmcT0ro_8vvBZmIFJmBW_krBQaImleMIXwqu6QtXX7EYgrUNCM90-_VERSkWDumk5-QMt32r3y3p-9eO8jwrfpZRK3B4HsW8KF76Rx_Jky3ar9STY6Sq83YYbNNQeCGJV4qVo4I_1Y0QS8Yv1Snh442ctfU5A_CFxUd163Ai9fPdQ9kDqQo-N4gJnqyZKF_KkHp6wnFPECPTNSKNMPp4JGVKpnemhv3kDvM65FYPNlaNpig2zWDYJ_nzgzjkb7bdUU8x7BoWZ9upF3UjVb1yUyKDWVEPzH2-Iz8T-Ry2WSCerTj3__h89IfR6LsjF2Bzw4_1Mw7T9NN5fFZOFtTetB2vZtkx62Bm3qcu6fQW_afPkLMbIPaS6pIIb82YQD_S2WxKlDhR042mNCD_-moREDIogj5wLV_9QgwbPrxFu4cPp0FUmHplmQHmp6VDFdaEucILeWftCDj1dxOfQzEf8oOoD1Sn63R21n2VUx_mBmu2AIPvoq2wQVS_FDHYfLpgKzFmXNEmtwsRga6lspI9cPOhqVPc5VqW9SgBaXWKoHLFN_6IRsUKJ8yaZ4Ce3zDL36uytAf2c-fFN9awNXA3Vz0JQAbcPZu0w3fhngBCsYAxHFN3T7a2ak0fBdq9CXjxZhz8gngZ3vQvOhS8MG51q-TaJw4qF_ZYNnPfxuYtcDy5PrSrg7HgnDV4YBwOcRFCqBgfejdTinudVyQSGrHUcILrpltO-LdK8qaasmn3liriofHjSEdhxMi6RkmxvHEsRYd5R6IG5Ewhs9vmERNo9wNXbv2aJuqoOFfP-c08bij48WqyVyhjYBNGO15-8uT-xQM0ioF8wVsyQVHIBQPH1gOr29kVkeM6FzSW_HKv3d0qxKYof7JCyj_TeoUKcAMj1nXWucv7vZAoiv1Yvcp2tCxAzizFS2wuQn0wkJKdmVCUAIZkHyiB0jCCNpy6I5_dEZG-R-n_6nbMyd6uKE7QZKgfOxR0ZazVXCv8JYOMnJ0E_XHINXsNcdFcEk-SujevG2IaOpc4Z0Yke8srcQVhJcPrS0RBsh_s5DhfsonFyEBb2Se8ilEyGcdKK0eGnyaRpxBkXFqwyMLvtEysQcAPdumi9Og09SRhcWjkixWULljVOOo3nJvnq_9KxT85eB25zjBYDec3gtoC3FFk9v5cZ1JTzj9uMKRxcqu8iCVDXwENpu3ZCuy3caTOCkpdDSqPWFABvNGLPa8h8M1sGycQ4R2YPx0j8etuhNojE0b7iLsWheSclniglTCtkCIbMcYTzBchb6JuEEFpxpKxPo5Di9OoeWDnRlsM1G43Ry_cvHc0UIw7ea4g5e2kHhYlknhwT9eAPbbpU5MwfXHtsKSlH3wNkN3L2dUZ8On2OhUk60Yx8ysNBbFnh_rNO-eecz1jx542qOFKDbOOy-JI1VKhDgQhTrKiKf7Mg97RCF4K41GTa0xrlMCWnPEpllA9-U_sSg8o-lg0tqk-_dtI_-fSB_fOBibkVDcqW0O7PepCiJ9uj0_SwXxWKuZdi2U9CPVm19LCXrpIAqUbublgci97Yg92uyUAcA07Y5e_m5PsvHQ8DMwdrnu2JT5t2WvLyxO8EykuSptOrJ2UHPDDME1CoKhgQ25vShs0kCxvZhF6VZDGpim1i2f5fnJa2D6SEzDA2bu1JxFLP-MfR20MrRGeGlKOQkqrXZkqGl_QO552PtCRCUnk3DnWWgxaYE_u_5NRCofEDS8mr3xNs8JU62ePOBbUrULEaZ1mQW44DzvuR7huK6013RHm2FZcgiR-dYIWlvw77wDfbhEiDgaRUB6zhvuh7INCi22w6wFK4fqIzeLfwq5V8YLyETSrh7n2JZubpU6_JFug_HHEa3T-Jlvqv8n90s5x5jZ8Xr38nzEtpWcjEMAXcEAAooWF1GxpFrDOo9gt3uqf9Ssbvu3mPyy86ig0q_9v-wRLYNXAhA2xMHblrCTTXUoCGz_fAVGysG5PiRKlti4TejyAuU7xzmsdBmcUWH1erae6CdLTfNnuE-1qBN4M-lW3mf-HCp_waAMU0vqmr2oW7N8UiLpMW8G7vv7wZrq661di3R24w2uClag532hKyyV2LfNqu4jJYVFo1oS-eDVU39f9wcfQBoHZR936sQue9ciBxmhhteL5gkbIenSuxVBvsnH3xBgIZqzQ2r-kw3BGvOB4GViM1MAN7kK2rqR8g5ZjnCNugIvZVGkWQRcVHHAtnLZtzVEzdXSFEsm2dDQwAXhixZQ.T0ZZ2YlbphX9oMk0GvY8-A";

async function runCommand(command, cwd) {
  console.log(`Running: ${command} in ${cwd}`);
  try {
    const { stdout, stderr } = await execPromise(command, { cwd });
    if (stdout) console.log(stdout);
    if (stderr) console.error("Error:", stderr);
    return true;
  } catch (error) {
    console.error(`Error executing command: ${command}`);
    console.error(error.message);
    return false;
  }
}

async function initDatabase() {
  console.log("🚀 Starting database initialization...");

  console.log("\n📥 Fetching episodes...");
  const getEpisodesSuccess = await runCommand(
    `node index.js --language spanish --token ${SPANISH_TOKEN}`,
    GET_EPISODES_PATH
  );

  if (getEpisodesSuccess) {
    await runCommand(
      `node index.js --language english --token ${ENGLISH_TOKEN}`,
      GET_EPISODES_PATH
    );
  }

  if (!getEpisodesSuccess) {
    console.error("❌ Failed to get episodes. Exiting...");
    process.exit(1);
  }

  console.log("\n💾 Saving episodes to Firestore...");
  const saveEpisodesSuccess = await runCommand(
    "node index.js",
    SAVE_EPISODES_PATH
  );

  if (!saveEpisodesSuccess) {
    console.error("❌ Failed to save episodes to Firestore. Exiting...");
    process.exit(1);
  }

  console.log("\n🖼️ Downloading episodes pictures...");
  const getPicturesSuccess = await runCommand(
    "node index.js",
    GET_EPISODES_PICTURES_PATH
  );

  if (!getPicturesSuccess) {
    console.error("❌ Failed to download episodes pictures. Exiting...");
    process.exit(1);
  }

  console.log("\n✅ Database initialization completed successfully!");
}

// Run the initialization
initDatabase().catch((error) => {
  console.error("❌ An error occurred during database initialization:");
  console.error(error);
  process.exit(1);
});
